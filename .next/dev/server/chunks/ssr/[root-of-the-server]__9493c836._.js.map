{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/bjethwani/karenai/app/utils/imageMetadata.ts"],"sourcesContent":["import { parse } from 'exifr';\n\ninterface ImageMetadata {\n  filename: string;\n  size: number;\n  type: string;\n  lastModified: Date;\n  dimensions?: {\n    width: number;\n    height: number;\n  };\n  location?: {\n    latitude: number;\n    longitude: number;\n    altitude?: number;\n  };\n  camera?: {\n    make?: string;\n    model?: string;\n    software?: string;\n  };\n  timestamp?: {\n    dateTime?: string;\n    dateTimeOriginal?: string;\n  };\n  exif?: any;\n}\n\nexport async function extractMetadata(file: File): Promise<ImageMetadata> {\n  const metadata: ImageMetadata = {\n    filename: file.name,\n    size: file.size,\n    type: file.type,\n    lastModified: new Date(file.lastModified),\n  };\n\n  try {\n    // Get image dimensions\n    const dimensions = await getImageDimensions(file);\n    if (dimensions) {\n      metadata.dimensions = dimensions;\n    }\n\n    // Extract EXIF data\n    const exifData = await parse(file, {\n      gps: true,\n      pick: [\n        'latitude', 'longitude', 'altitude',\n        'Make', 'Model', 'Software',\n        'DateTime', 'DateTimeOriginal', 'CreateDate',\n        'ExifImageWidth', 'ExifImageHeight',\n        'GPSLatitude', 'GPSLongitude', 'GPSAltitude',\n        'GPSLatitudeRef', 'GPSLongitudeRef'\n      ]\n    });\n\n    if (exifData) {\n      metadata.exif = exifData;\n\n      // Extract location data\n      if (exifData.latitude && exifData.longitude) {\n        metadata.location = {\n          latitude: exifData.latitude,\n          longitude: exifData.longitude,\n          altitude: exifData.altitude || undefined,\n        };\n      }\n\n      // Extract camera information\n      if (exifData.Make || exifData.Model || exifData.Software) {\n        metadata.camera = {\n          make: exifData.Make,\n          model: exifData.Model,\n          software: exifData.Software,\n        };\n      }\n\n      // Extract timestamp information\n      if (exifData.DateTimeOriginal || exifData.DateTime || exifData.CreateDate) {\n        metadata.timestamp = {\n          dateTimeOriginal: exifData.DateTimeOriginal || exifData.CreateDate,\n          dateTime: exifData.DateTime,\n        };\n      }\n\n      // Override dimensions from EXIF if available and more accurate\n      if (exifData.ExifImageWidth && exifData.ExifImageHeight) {\n        metadata.dimensions = {\n          width: exifData.ExifImageWidth,\n          height: exifData.ExifImageHeight,\n        };\n      }\n    }\n  } catch (error) {\n    console.warn('Could not extract EXIF data:', error);\n    // Continue without EXIF data - we still have basic file metadata\n  }\n\n  return metadata;\n}\n\nfunction getImageDimensions(file: File): Promise<{ width: number; height: number } | null> {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => {\n      resolve({ width: img.width, height: img.height });\n    };\n    img.onerror = () => {\n      resolve(null);\n    };\n    img.src = URL.createObjectURL(file);\n  });\n}\n\n/**\n * Convert GPS coordinates from degrees, minutes, seconds to decimal degrees\n */\nexport function convertDMSToDecimal(\n  degrees: number,\n  minutes: number,\n  seconds: number,\n  direction: 'N' | 'S' | 'E' | 'W'\n): number {\n  let decimal = degrees + minutes / 60 + seconds / 3600;\n  \n  if (direction === 'S' || direction === 'W') {\n    decimal = -decimal;\n  }\n  \n  return decimal;\n}\n\n/**\n * Format coordinates for display\n */\nexport function formatCoordinate(coordinate: number, type: 'lat' | 'lng'): string {\n  const direction = type === 'lat' \n    ? (coordinate >= 0 ? 'N' : 'S')\n    : (coordinate >= 0 ? 'E' : 'W');\n  \n  const abs = Math.abs(coordinate);\n  const degrees = Math.floor(abs);\n  const minutes = Math.floor((abs - degrees) * 60);\n  const seconds = ((abs - degrees) * 60 - minutes) * 60;\n  \n  return `${degrees}Â°${minutes}'${seconds.toFixed(2)}\"${direction}`;\n}\n\n/**\n * Calculate distance between two GPS coordinates using Haversine formula\n */\nexport function calculateDistance(\n  lat1: number, lon1: number,\n  lat2: number, lon2: number\n): number {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = \n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c; // Distance in kilometers\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/bjethwani/karenai/app/components/ImageUpload.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useCallback } from 'react';\nimport Image from 'next/image';\nimport { extractMetadata } from '../utils/imageMetadata';\nimport { backendService } from '../services/backendService';\n\ninterface ImageMetadata {\n  filename: string;\n  size: number;\n  type: string;\n  lastModified: Date;\n  dimensions?: {\n    width: number;\n    height: number;\n  };\n  location?: {\n    latitude: number;\n    longitude: number;\n    altitude?: number;\n  };\n  camera?: {\n    make?: string;\n    model?: string;\n    software?: string;\n  };\n  timestamp?: {\n    dateTime?: string;\n    dateTimeOriginal?: string;\n  };\n  exif?: any;\n}\n\nexport default function ImageUpload() {\n  const [selectedImage, setSelectedImage] = useState<File | null>(null);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n  const [metadata, setMetadata] = useState<ImageMetadata | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileSelect = useCallback(async (file: File) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Validate file type\n      if (!file.type.startsWith('image/')) {\n        throw new Error('Please select a valid image file');\n      }\n\n      // Validate file size (10MB limit)\n      if (file.size > 10 * 1024 * 1024) {\n        throw new Error('File size must be less than 10MB');\n      }\n\n      setSelectedImage(file);\n      \n      // Create preview URL\n      const url = URL.createObjectURL(file);\n      setPreviewUrl(url);\n\n      // Extract metadata\n      const extractedMetadata = await extractMetadata(file);\n      setMetadata(extractedMetadata);\n\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred while processing the image');\n      setSelectedImage(null);\n      setPreviewUrl(null);\n      setMetadata(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const handleDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  }, [handleFileSelect]);\n\n  const handleDragOver = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n  }, []);\n\n  const handleFileInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  }, [handleFileSelect]);\n\n  const handleSubmit = async () => {\n    if (!selectedImage || !metadata) return;\n\n    setLoading(true);\n    try {\n      // Create FormData for sending to backend\n      const formData = new FormData();\n      formData.append('image', selectedImage);\n      formData.append('metadata', JSON.stringify(metadata));\n\n      // Send to backend API\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Failed to upload image');\n      }\n\n      console.log('Upload successful:', result);\n      alert(`Image uploaded successfully! \n        File ID: ${result.data.id}\n        ${metadata.location ? `Location: ${metadata.location.latitude.toFixed(6)}, ${metadata.location.longitude.toFixed(6)}` : 'No location data'}\n        Ready for computer vision processing.`);\n      \n      // Reset form after successful upload\n      resetForm();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to process image');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setSelectedImage(null);\n    setPreviewUrl(null);\n    setMetadata(null);\n    setError(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto bg-white dark:bg-zinc-800 rounded-lg shadow-lg p-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Upload Section */}\n        <div className=\"space-y-4\">\n          <h2 className=\"text-2xl font-semibold text-zinc-900 dark:text-zinc-100\">\n            Upload Image\n          </h2>\n          \n          <div\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n            className=\"border-2 border-dashed border-zinc-300 dark:border-zinc-600 rounded-lg p-8 text-center hover:border-blue-500 dark:hover:border-blue-400 transition-colors cursor-pointer\"\n            onClick={() => fileInputRef.current?.click()}\n          >\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleFileInputChange}\n              className=\"hidden\"\n            />\n            \n            {loading ? (\n              <div className=\"flex items-center justify-center\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n                <span className=\"ml-2 text-zinc-600 dark:text-zinc-400\">Processing...</span>\n              </div>\n            ) : (\n              <>\n                <svg\n                  className=\"mx-auto h-12 w-12 text-zinc-400 dark:text-zinc-500\"\n                  stroke=\"currentColor\"\n                  fill=\"none\"\n                  viewBox=\"0 0 48 48\"\n                >\n                  <path\n                    d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n                <p className=\"mt-2 text-sm text-zinc-600 dark:text-zinc-400\">\n                  <span className=\"font-medium\">Click to upload</span> or drag and drop\n                </p>\n                <p className=\"text-xs text-zinc-500 dark:text-zinc-500\">\n                  PNG, JPG, JPEG up to 10MB\n                </p>\n              </>\n            )}\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md p-4\">\n              <p className=\"text-sm text-red-600 dark:text-red-400\">{error}</p>\n            </div>\n          )}\n\n          {selectedImage && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md p-4\">\n                <p className=\"text-sm text-green-600 dark:text-green-400\">\n                  â Image uploaded successfully\n                </p>\n              </div>\n              \n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={handleSubmit}\n                  disabled={loading || !metadata}\n                  className=\"flex-1 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white py-2 px-4 rounded-md font-medium transition-colors\"\n                >\n                  {loading ? 'Processing...' : 'Send to Backend'}\n                </button>\n                <button\n                  onClick={resetForm}\n                  className=\"bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded-md font-medium transition-colors\"\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Preview and Metadata Section */}\n        <div className=\"space-y-4\">\n          {previewUrl && (\n            <>\n              <h3 className=\"text-xl font-semibold text-zinc-900 dark:text-zinc-100\">\n                Image Preview\n              </h3>\n              <div className=\"relative aspect-video bg-zinc-100 dark:bg-zinc-700 rounded-lg overflow-hidden\">\n                <Image\n                  src={previewUrl}\n                  alt=\"Preview\"\n                  fill\n                  className=\"object-cover\"\n                />\n              </div>\n            </>\n          )}\n\n          {metadata && (\n            <>\n              <h3 className=\"text-xl font-semibold text-zinc-900 dark:text-zinc-100\">\n                Image Metadata\n              </h3>\n              <div className=\"bg-zinc-50 dark:bg-zinc-700 rounded-lg p-4 space-y-3\">\n                {/* Basic Info */}\n                <div>\n                  <h4 className=\"font-medium text-zinc-900 dark:text-zinc-100 mb-2\">Basic Information</h4>\n                  <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                    <div>\n                      <span className=\"text-zinc-600 dark:text-zinc-400\">Filename:</span>\n                      <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">{metadata.filename}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-zinc-600 dark:text-zinc-400\">Size:</span>\n                      <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">\n                        {(metadata.size / (1024 * 1024)).toFixed(2)} MB\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-zinc-600 dark:text-zinc-400\">Type:</span>\n                      <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">{metadata.type}</span>\n                    </div>\n                    {metadata.dimensions && (\n                      <div>\n                        <span className=\"text-zinc-600 dark:text-zinc-400\">Dimensions:</span>\n                        <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">\n                          {metadata.dimensions.width} Ã {metadata.dimensions.height}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Location Info */}\n                {metadata.location && (\n                  <div>\n                    <h4 className=\"font-medium text-zinc-900 dark:text-zinc-100 mb-2\">ð Location Data</h4>\n                    <div className=\"space-y-1 text-sm\">\n                      <div>\n                        <span className=\"text-zinc-600 dark:text-zinc-400\">Latitude:</span>\n                        <span className=\"ml-1 text-zinc-900 dark:text-zinc-100 font-mono\">\n                          {metadata.location.latitude.toFixed(6)}Â°\n                        </span>\n                      </div>\n                      <div>\n                        <span className=\"text-zinc-600 dark:text-zinc-400\">Longitude:</span>\n                        <span className=\"ml-1 text-zinc-900 dark:text-zinc-100 font-mono\">\n                          {metadata.location.longitude.toFixed(6)}Â°\n                        </span>\n                      </div>\n                      {metadata.location.altitude && (\n                        <div>\n                          <span className=\"text-zinc-600 dark:text-zinc-400\">Altitude:</span>\n                          <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">\n                            {metadata.location.altitude.toFixed(1)}m\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Camera Info */}\n                {metadata.camera && Object.keys(metadata.camera).length > 0 && (\n                  <div>\n                    <h4 className=\"font-medium text-zinc-900 dark:text-zinc-100 mb-2\">ð· Camera Information</h4>\n                    <div className=\"space-y-1 text-sm\">\n                      {metadata.camera.make && (\n                        <div>\n                          <span className=\"text-zinc-600 dark:text-zinc-400\">Make:</span>\n                          <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">{metadata.camera.make}</span>\n                        </div>\n                      )}\n                      {metadata.camera.model && (\n                        <div>\n                          <span className=\"text-zinc-600 dark:text-zinc-400\">Model:</span>\n                          <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">{metadata.camera.model}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Timestamp Info */}\n                {metadata.timestamp && (\n                  <div>\n                    <h4 className=\"font-medium text-zinc-900 dark:text-zinc-100 mb-2\">ð Timestamp</h4>\n                    <div className=\"space-y-1 text-sm\">\n                      {metadata.timestamp.dateTimeOriginal && (\n                        <div>\n                          <span className=\"text-zinc-600 dark:text-zinc-400\">Date Taken:</span>\n                          <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">\n                            {new Date(metadata.timestamp.dateTimeOriginal).toLocaleString()}\n                          </span>\n                        </div>\n                      )}\n                      <div>\n                        <span className=\"text-zinc-600 dark:text-zinc-400\">Last Modified:</span>\n                        <span className=\"ml-1 text-zinc-900 dark:text-zinc-100\">\n                          {metadata.lastModified.toLocaleString()}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {!metadata.location && (\n                  <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md p-3\">\n                    <p className=\"text-sm text-yellow-700 dark:text-yellow-300\">\n                      â ï¸ No GPS location data found in this image. Location data is only available if the camera had GPS enabled when the photo was taken.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file:///Users/bjethwani/karenai/app/components/ImageHistory.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\ninterface UploadedImage {\n  id: string;\n  filename: string;\n  originalName: string;\n  size: number;\n  uploadedAt: string;\n  metadata: {\n    location?: {\n      latitude: number;\n      longitude: number;\n      altitude?: number;\n    };\n    dimensions?: {\n      width: number;\n      height: number;\n    };\n    camera?: {\n      make?: string;\n      model?: string;\n    };\n  };\n}\n\nexport default function ImageHistory() {\n  const [images, setImages] = useState<UploadedImage[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // In a real application, you would fetch this from your backend\n    // For now, we'll just show a placeholder\n    const mockImages: UploadedImage[] = [];\n    setImages(mockImages);\n  }, []);\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  if (images.length === 0) {\n    return (\n      <div className=\"bg-white dark:bg-zinc-800 rounded-lg shadow-lg p-6\">\n        <h2 className=\"text-2xl font-semibold text-zinc-900 dark:text-zinc-100 mb-4\">\n          Upload History\n        </h2>\n        <div className=\"text-center py-8\">\n          <div className=\"text-zinc-400 dark:text-zinc-500 mb-2\">\n            <svg className=\"mx-auto h-12 w-12\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n            </svg>\n          </div>\n          <p className=\"text-zinc-600 dark:text-zinc-400\">No images uploaded yet</p>\n          <p className=\"text-sm text-zinc-500 dark:text-zinc-500 mt-1\">\n            Upload your first infrastructure damage image to get started\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-zinc-800 rounded-lg shadow-lg p-6\">\n      <h2 className=\"text-2xl font-semibold text-zinc-900 dark:text-zinc-100 mb-4\">\n        Upload History ({images.length})\n      </h2>\n      \n      <div className=\"space-y-4\">\n        {images.map((image) => (\n          <div key={image.id} className=\"border border-zinc-200 dark:border-zinc-700 rounded-lg p-4\">\n            <div className=\"flex justify-between items-start mb-3\">\n              <div>\n                <h3 className=\"font-medium text-zinc-900 dark:text-zinc-100\">\n                  {image.originalName}\n                </h3>\n                <p className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n                  {new Date(image.uploadedAt).toLocaleString()}\n                </p>\n              </div>\n              <span className=\"text-xs bg-zinc-100 dark:bg-zinc-700 text-zinc-600 dark:text-zinc-400 px-2 py-1 rounded\">\n                {formatFileSize(image.size)}\n              </span>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n              {image.metadata.location && (\n                <div>\n                  <span className=\"text-zinc-600 dark:text-zinc-400\">Location:</span>\n                  <div className=\"text-zinc-900 dark:text-zinc-100 font-mono\">\n                    {image.metadata.location.latitude.toFixed(6)}Â°, {image.metadata.location.longitude.toFixed(6)}Â°\n                  </div>\n                </div>\n              )}\n              \n              {image.metadata.dimensions && (\n                <div>\n                  <span className=\"text-zinc-600 dark:text-zinc-400\">Dimensions:</span>\n                  <div className=\"text-zinc-900 dark:text-zinc-100\">\n                    {image.metadata.dimensions.width} Ã {image.metadata.dimensions.height}\n                  </div>\n                </div>\n              )}\n              \n              {image.metadata.camera && (\n                <div>\n                  <span className=\"text-zinc-600 dark:text-zinc-400\">Camera:</span>\n                  <div className=\"text-zinc-900 dark:text-zinc-100\">\n                    {image.metadata.camera.make} {image.metadata.camera.model}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"mt-3 pt-3 border-t border-zinc-200 dark:border-zinc-700\">\n              <div className=\"flex space-x-2\">\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300\">\n                  Ready for CV Processing\n                </span>\n                {image.metadata.location ? (\n                  <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300\">\n                    GPS Data Available\n                  </span>\n                ) : (\n                  <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\">\n                    No GPS Data\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":["file:///Users/bjethwani/karenai/app/components/DamageTypesInfo.tsx"],"sourcesContent":["'use client';\n\nexport default function DamageTypesInfo() {\n  const damageTypes = [\n    {\n      name: \"Potholes\",\n      description: \"Circular or oval-shaped holes in road surfaces\",\n      severity: [\"Minor\", \"Moderate\", \"Severe\"],\n      icon: \"ð³ï¸\"\n    },\n    {\n      name: \"Cracks\",\n      description: \"Linear fractures in pavement or building surfaces\",\n      severity: [\"Hairline\", \"Wide\", \"Structural\"],\n      icon: \"â¡\"\n    },\n    {\n      name: \"Surface Damage\",\n      description: \"General wear, erosion, or surface deterioration\",\n      severity: [\"Light\", \"Moderate\", \"Heavy\"],\n      icon: \"ð¨\"\n    },\n    {\n      name: \"Water Damage\",\n      description: \"Flooding, drainage issues, or water-related damage\",\n      severity: [\"Minor\", \"Moderate\", \"Major\"],\n      icon: \"ð§\"\n    },\n    {\n      name: \"Structural Issues\",\n      description: \"Building damage, foundation problems, or structural defects\",\n      severity: [\"Cosmetic\", \"Moderate\", \"Critical\"],\n      icon: \"ðï¸\"\n    },\n    {\n      name: \"Utility Damage\",\n      description: \"Damaged manholes, utility covers, or infrastructure\",\n      severity: [\"Functional\", \"Damaged\", \"Hazardous\"],\n      icon: \"âï¸\"\n    }\n  ];\n\n  return (\n    <div className=\"bg-white dark:bg-zinc-800 rounded-lg shadow-lg p-6\">\n      <h2 className=\"text-2xl font-semibold text-zinc-900 dark:text-zinc-100 mb-4\">\n        Supported Damage Types\n      </h2>\n      <p className=\"text-zinc-600 dark:text-zinc-400 mb-6\">\n        Our computer vision system is designed to identify and classify various types of infrastructure damage. \n        Upload images of any of the following damage types for automated analysis:\n      </p>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {damageTypes.map((damage) => (\n          <div key={damage.name} className=\"border border-zinc-200 dark:border-zinc-700 rounded-lg p-4 hover:shadow-md transition-shadow\">\n            <div className=\"flex items-center mb-3\">\n              <span className=\"text-2xl mr-3\">{damage.icon}</span>\n              <h3 className=\"text-lg font-medium text-zinc-900 dark:text-zinc-100\">\n                {damage.name}\n              </h3>\n            </div>\n            \n            <p className=\"text-sm text-zinc-600 dark:text-zinc-400 mb-3\">\n              {damage.description}\n            </p>\n            \n            <div>\n              <span className=\"text-xs font-medium text-zinc-500 dark:text-zinc-400 uppercase tracking-wide\">\n                Severity Levels:\n              </span>\n              <div className=\"flex flex-wrap gap-1 mt-1\">\n                {damage.severity.map((level) => (\n                  <span\n                    key={level}\n                    className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300\"\n                  >\n                    {level}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg\">\n        <div className=\"flex items-start\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <h4 className=\"text-sm font-medium text-blue-800 dark:text-blue-300\">\n              Computer Vision Processing\n            </h4>\n            <p className=\"text-sm text-blue-700 dark:text-blue-400 mt-1\">\n              Images with GPS data will be prioritized for processing. Clear, well-lit images produce the best classification results. \n              The system analyzes damage type, severity, and provides location-based reporting for maintenance teams.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;;AAEe,SAAS;IACtB,MAAM,cAAc;QAClB;YACE,MAAM;YACN,aAAa;YACb,UAAU;gBAAC;gBAAS;gBAAY;aAAS;YACzC,MAAM;QACR;QACA;YACE,MAAM;YACN,aAAa;YACb,UAAU;gBAAC;gBAAY;gBAAQ;aAAa;YAC5C,MAAM;QACR;QACA;YACE,MAAM;YACN,aAAa;YACb,UAAU;gBAAC;gBAAS;gBAAY;aAAQ;YACxC,MAAM;QACR;QACA;YACE,MAAM;YACN,aAAa;YACb,UAAU;gBAAC;gBAAS;gBAAY;aAAQ;YACxC,MAAM;QACR;QACA;YACE,MAAM;YACN,aAAa;YACb,UAAU;gBAAC;gBAAY;gBAAY;aAAW;YAC9C,MAAM;QACR;QACA;YACE,MAAM;YACN,aAAa;YACb,UAAU;gBAAC;gBAAc;gBAAW;aAAY;YAChD,MAAM;QACR;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA+D;;;;;;0BAG7E,8OAAC;gBAAE,WAAU;0BAAwC;;;;;;0BAKrD,8OAAC;gBAAI,WAAU;0BACZ,YAAY,GAAG,CAAC,CAAC,uBAChB,8OAAC;wBAAsB,WAAU;;0CAC/B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAiB,OAAO,IAAI;;;;;;kDAC5C,8OAAC;wCAAG,WAAU;kDACX,OAAO,IAAI;;;;;;;;;;;;0CAIhB,8OAAC;gCAAE,WAAU;0CACV,OAAO,WAAW;;;;;;0CAGrB,8OAAC;;kDACC,8OAAC;wCAAK,WAAU;kDAA+E;;;;;;kDAG/F,8OAAC;wCAAI,WAAU;kDACZ,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,sBACpB,8OAAC;gDAEC,WAAU;0DAET;+CAHI;;;;;;;;;;;;;;;;;uBAnBL,OAAO,IAAI;;;;;;;;;;0BA+BzB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;gCAAwB,MAAK;gCAAe,SAAQ;0CACjE,cAAA,8OAAC;oCAAK,UAAS;oCAAU,GAAE;oCAAmI,UAAS;;;;;;;;;;;;;;;;sCAG3K,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAuD;;;;;;8CAGrE,8OAAC;oCAAE,WAAU;8CAAgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASzE","debugId":null}}]
}